{
  "openapi": "3.0.3",
  "info": {
    "title": "Makerspace Server V2",
    "version": "v2"
  },
  "basePath": "/api",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json",
    "text/html"
  ],
  "components": {
    "schemas": {
      "MemberStatus": {
        "type": "string",
        "enum": [
          "activeMember",
          "inactive",
          "nonMember",
          "revoked"
        ]
      },
      "MemberRole": {
        "type": "string",
        "enum": [
          "admin",
          "member"
        ]
      },
      "PayPalAccountSummary": {
        "type": "object",
        "properties": {
          "imageUrl": {
            "type": "string"
          },
          "payerEmail": {
            "type": "string"
          },
          "payerFirstName": {
            "type": "string"
          },
          "payerLastName": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        }
      },
      "CreditCardSummary": {
        "type": "object",
        "properties": {
          "imageUrl": {
            "type": "string"
          },
          "cardType": {
            "type": "string"
          },
          "expirationMonth": {
            "type": "number"
          },
          "expirationYear": {
            "type": "number"
          },
          "expirationDate": {
            "type": "string"
          },
          "last4": {
            "type": "number"
          },
          "debit": {
            "type": "boolean"
          },
          "token": {
            "type": "string"
          }
        }
      },
      "InvoiceableResource": {
        "type": "string",
        "enum": [
          "member",
          "rental"
        ]
      },
      "Card": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "holder": {
            "type": "string"
          },
          "expiry": {
            "type": "number"
          },
          "validity": {
            "type": "string",
            "enum": [
              "activeMember",
              "expired",
              "inactive",
              "lost",
              "nonMember",
              "revoked",
              "stolen"
            ]
          },
          "uid": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "holder",
          "expiry",
          "validity",
          "uid"
        ]
      },
      "RejectionCard": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          }
        },
        "required": [
          "uid"
        ]
      },
      "CreditCard": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          },
          "paymentType": {
            "type": "string",
            "x-nullable": true
          },
          "customerId": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "subscriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subscription"
            }
          },
          "cardType": {
            "type": "string"
          },
          "expirationMonth": {
            "type": "number"
          },
          "expirationYear": {
            "type": "number"
          },
          "expirationDate": {
            "type": "string"
          },
          "last4": {
            "type": "number"
          },
          "debit": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "isDefault",
          "customerId",
          "imageUrl",
          "subscriptions",
          "cardType",
          "expirationMonth",
          "expirationYear",
          "expirationDate",
          "last4",
          "debit"
        ]
      },
      "Discount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "amount"
        ]
      },
      "Dispute": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "amountDisputed": {
            "type": "number"
          },
          "status": {
            "type": "string"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction"
          }
        },
        "required": [
          "id",
          "kind",
          "reason",
          "createdAt",
          "amountDisputed",
          "status",
          "transaction"
        ]
      },
      "NewEarnedMembership": {
        "type": "object",
        "properties": {
          "memberId": {
            "type": "string"
          },
          "requirements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NewRequirement"
            }
          }
        },
        "required": [
          "memberId",
          "requirements"
        ]
      },
      "EarnedMembership": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "memberId": {
            "type": "string"
          },
          "memberName": {
            "type": "string"
          },
          "memberStatus": {
            "$ref": "#/components/schemas/MemberStatus"
          },
          "memberExpiration": {
            "type": "number"
          },
          "requirements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Requirement"
            }
          }
        },
        "required": [
          "id",
          "memberId",
          "memberName",
          "memberStatus",
          "memberExpiration",
          "requirements"
        ]
      },
      "error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "x-nullable": true
          },
          "error": {
            "type": "string",
            "x-nullable": true
          }
        },
        "required": [
          "message"
        ]
      },
      "passwordError": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "object",
            "properties": {
              "email": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "errors"
        ]
      },
      "Invoice": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "settled": {
            "type": "boolean"
          },
          "pastDue": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string"
          },
          "dueDate": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "subscriptionId": {
            "type": "string",
            "x-nullable": true
          },
          "transactionId": {
            "type": "string",
            "x-nullable": true
          },
          "planId": {
            "type": "string",
            "x-nullable": true
          },
          "resourceClass": {
            "$ref": "#/components/schemas/InvoiceableResource"
          },
          "resourceId": {
            "type": "string"
          },
          "quantity": {
            "type": "number"
          },
          "discountId": {
            "type": "string",
            "x-nullable": true
          },
          "memberName": {
            "type": "string"
          },
          "memberId": {
            "type": "string"
          },
          "refunded": {
            "type": "boolean"
          },
          "refundRequested": {
            "type": "string",
            "x-nullable": true
          },
          "resource": {
            "type": "object",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Member"
              },
              {
                "$ref": "#/components/schemas/Rental"
              }
            ]
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "settled",
          "pastDue",
          "createdAt",
          "dueDate",
          "amount",
          "resourceClass",
          "resourceId",
          "quantity",
          "memberName",
          "memberId",
          "refunded",
          "resource"
        ]
      },
      "NewInvoiceOption": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "planId": {
            "type": "string",
            "x-nullable": true
          },
          "resourceClass": {
            "$ref": "#/components/schemas/InvoiceableResource"
          },
          "quantity": {
            "type": "number"
          },
          "discountId": {
            "type": "string",
            "x-nullable": true
          },
          "disabled": {
            "type": "boolean"
          },
          "isPromotion": {
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "description",
          "amount",
          "resourceClass",
          "quantity",
          "disabled",
          "isPromotion"
        ]
      },
      "InvoiceOption": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "planId": {
            "type": "string",
            "x-nullable": true
          },
          "resourceClass": {
            "$ref": "#/components/schemas/InvoiceableResource"
          },
          "quantity": {
            "type": "number"
          },
          "discountId": {
            "type": "string",
            "x-nullable": true
          },
          "disabled": {
            "type": "boolean"
          },
          "operation": {
            "type": "string"
          },
          "isPromotion": {
            "type": "boolean",
            "x-nullable": true
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "amount",
          "resourceClass",
          "quantity",
          "disabled",
          "operation"
        ]
      },
      "NewMember": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/MemberStatus"
          },
          "role": {
            "$ref": "#/components/schemas/MemberRole"
          },
          "memberContractOnFile": {
            "type": "boolean"
          },
          "phone": {
            "type": "string"
          },
          "address": {
            "type": "object",
            "properties": {
              "street": {
                "type": "string"
              },
              "unit": {
                "type": "string",
                "x-nullable": true
              },
              "city": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "postalCode": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "firstname",
          "lastname",
          "email",
          "status",
          "role",
          "memberContractOnFile",
          "phone",
          "address"
        ]
      },
      "Member": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/MemberStatus"
          },
          "role": {
            "$ref": "#/components/schemas/MemberRole"
          },
          "expirationTime": {
            "type": "number",
            "x-nullable": true
          },
          "memberContractOnFile": {
            "type": "boolean"
          },
          "cardId": {
            "type": "string",
            "x-nullable": true
          },
          "subscriptionId": {
            "type": "string",
            "x-nullable": true
          },
          "subscription": {
            "type": "boolean"
          },
          "customerId": {
            "type": "string",
            "x-nullable": true
          },
          "earnedMembershipId": {
            "type": "string",
            "x-nullable": true
          },
          "notes": {
            "type": "string",
            "x-nullable": true
          },
          "phone": {
            "type": "string",
            "x-nullable": true
          },
          "address": {
            "type": "object",
            "properties": {
              "street": {
                "type": "string",
                "x-nullable": true
              },
              "unit": {
                "type": "string",
                "x-nullable": true
              },
              "city": {
                "type": "string",
                "x-nullable": true
              },
              "state": {
                "type": "string",
                "x-nullable": true
              },
              "postalCode": {
                "type": "string",
                "x-nullable": true
              }
            }
          }
        },
        "required": [
          "id",
          "firstname",
          "lastname",
          "email",
          "status",
          "role",
          "memberContractOnFile",
          "subscription",
          "address"
        ]
      },
      "MemberSummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/MemberStatus"
          },
          "role": {
            "$ref": "#/components/schemas/MemberRole"
          },
          "expirationTime": {
            "type": "number",
            "x-nullable": true
          },
          "memberContractOnFile": {
            "type": "boolean"
          },
          "notes": {
            "type": "string",
            "x-nullable": true
          }
        },
        "required": [
          "id",
          "firstname",
          "lastname",
          "email",
          "status",
          "role",
          "memberContractOnFile"
        ]
      },
      "PayPalAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "default": {
            "type": "boolean"
          },
          "paymentType": {
            "type": "string",
            "x-nullable": true
          },
          "customerId": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "subscriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subscription"
            }
          },
          "email": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "default",
          "customerId",
          "imageUrl",
          "subscriptions",
          "email"
        ]
      },
      "Plan": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "membership",
              "rental"
            ]
          },
          "description": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "billingFrequency": {
            "type": "number"
          },
          "discounts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "amount": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "id",
          "name",
          "type",
          "description",
          "amount",
          "billingFrequency",
          "discounts"
        ]
      },
      "NewRequirement": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "rolloverLimit": {
            "type": "number"
          },
          "termLength": {
            "type": "number"
          },
          "targetCount": {
            "type": "number"
          },
          "strict": {
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "rolloverLimit",
          "termLength",
          "targetCount",
          "strict"
        ]
      },
      "Requirement": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "earnedMembershipId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "rolloverLimit": {
            "type": "number"
          },
          "termLength": {
            "type": "number"
          },
          "targetCount": {
            "type": "number"
          },
          "strict": {
            "type": "boolean"
          },
          "currentCount": {
            "type": "number"
          },
          "termStartDate": {
            "type": "string"
          },
          "termEndDate": {
            "type": "string"
          },
          "termId": {
            "type": "string"
          },
          "satisfied": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "earnedMembershipId",
          "name",
          "rolloverLimit",
          "termLength",
          "targetCount",
          "strict",
          "currentCount",
          "termStartDate",
          "termEndDate",
          "termId",
          "satisfied"
        ]
      },
      "NewReportRequirement": {
        "type": "object",
        "properties": {
          "requirementId": {
            "type": "string"
          },
          "reportedCount": {
            "type": "number"
          },
          "memberIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "requirementId",
          "reportedCount",
          "memberIds"
        ]
      },
      "ReportRequirement": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "requirementId": {
            "type": "string"
          },
          "reportedCount": {
            "type": "number"
          },
          "appliedCount": {
            "type": "number"
          },
          "currentCount": {
            "type": "number"
          },
          "memberIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "termStartDate": {
            "type": "string"
          },
          "termEndDate": {
            "type": "string"
          },
          "satisfied": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "requirementId",
          "reportedCount",
          "appliedCount",
          "currentCount",
          "memberIds",
          "termStartDate",
          "termEndDate",
          "satisfied"
        ]
      },
      "NewReport": {
        "type": "object",
        "properties": {
          "earnedMembershipId": {
            "type": "string"
          },
          "reportRequirements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NewReportRequirement"
            }
          }
        },
        "required": [
          "earnedMembershipId",
          "reportRequirements"
        ]
      },
      "Report": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "earnedMembershipId": {
            "type": "string"
          },
          "reportRequirements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportRequirement"
            }
          }
        },
        "required": [
          "id",
          "date",
          "earnedMembershipId",
          "reportRequirements"
        ]
      },
      "NewRental": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "x-nullable": true
          },
          "memberId": {
            "type": "string"
          },
          "expiration": {
            "type": "number"
          },
          "contractOnFile": {
            "type": "boolean"
          }
        },
        "required": [
          "number",
          "memberId",
          "expiration",
          "contractOnFile"
        ]
      },
      "Rental": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "memberName": {
            "type": "string"
          },
          "memberId": {
            "type": "string"
          },
          "expiration": {
            "type": "number"
          },
          "subscriptionId": {
            "type": "string",
            "x-nullable": true
          },
          "contractOnFile": {
            "type": "boolean"
          },
          "notes": {
            "type": "string",
            "x-nullable": true
          }
        },
        "required": [
          "id",
          "number",
          "description",
          "memberName",
          "memberId",
          "expiration",
          "contractOnFile"
        ]
      },
      "Subscription": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "planId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Canceled",
              "Past Due",
              "Pending",
              "Expired"
            ]
          },
          "amount": {
            "type": "string"
          },
          "failureCount": {
            "type": "number"
          },
          "daysPastDue": {
            "type": "number"
          },
          "billingDayOfMonth": {
            "type": "string"
          },
          "firstBillingDate": {
            "type": "string"
          },
          "nextBillingDate": {
            "type": "string"
          },
          "memberId": {
            "type": "string"
          },
          "memberName": {
            "type": "string"
          },
          "resourceClass": {
            "type": "string"
          },
          "resourceId": {
            "type": "string"
          },
          "paymentMethodToken": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "planId",
          "status",
          "amount",
          "failureCount",
          "daysPastDue",
          "billingDayOfMonth",
          "firstBillingDate",
          "nextBillingDate",
          "memberId",
          "memberName",
          "resourceClass",
          "resourceId",
          "paymentMethodToken"
        ]
      },
      "Transaction": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string"
          },
          "customerDetails": {
            "type": "object"
          },
          "disputes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Dispute"
            }
          },
          "discountAmount": {
            "type": "string"
          },
          "discounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Discount"
            }
          },
          "gatewayRejectionReason": {
            "type": "string",
            "x-nullable": true
          },
          "status": {
            "type": "string",
            "enum": [
              "authorization_expired",
              "authorized",
              "authorizing",
              "settlement_pending",
              "settlement_declined",
              "failed",
              "gateway_rejected",
              "processor_declined",
              "settled",
              "settling",
              "submmitted_for_settlement",
              "voided"
            ]
          },
          "id": {
            "type": "string"
          },
          "planId": {
            "type": "string",
            "x-nullable": true
          },
          "recurring": {
            "type": "boolean"
          },
          "refundIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "refundedTransactionId": {
            "type": "string",
            "x-nullable": true
          },
          "subscriptionDetails": {
            "type": "object",
            "properties": {
              "billingPeriodStartDate": {
                "type": "string",
                "x-nullable": true
              },
              "billingPeriodEndDate": {
                "type": "string",
                "x-nullable": true
              }
            }
          },
          "subscriptionId": {
            "type": "string",
            "x-nullable": true
          },
          "amount": {
            "type": "string"
          },
          "memberId": {
            "type": "string"
          },
          "memberName": {
            "type": "string"
          },
          "invoice": {
            "$ref": "#/components/schemas/Invoice",
            "x-nullable": true
          },
          "paymentMethodDetails": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CreditCardSummary"
              },
              {
                "$ref": "#/components/schemas/PayPalAccountSummary"
              }
            ]
          }
        },
        "required": [
          "createdAt",
          "customerDetails",
          "disputes",
          "discountAmount",
          "discounts",
          "status",
          "id",
          "recurring",
          "refundIds",
          "subscriptionDetails",
          "amount",
          "memberId",
          "memberName",
          "paymentMethodDetails"
        ]
      }
    }
  },
  "paths": {
    "/admin/analytics": {
      "get": {
        "summary": "Lists analytic counts",
        "tags": [
          "Analytics"
        ],
        "operationId": "adminListAnalytics",
        "responses": {
          "200": {
            "description": "analytics read",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalMembers": {
                      "type": "number"
                    },
                    "newMembers": {
                      "type": "number"
                    },
                    "subscribedMembers": {
                      "type": "number"
                    },
                    "pastDueInvoices": {
                      "type": "number"
                    },
                    "refundsPending": {
                      "type": "number"
                    }
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalMembers": {
                      "type": "number"
                    },
                    "newMembers": {
                      "type": "number"
                    },
                    "subscribedMembers": {
                      "type": "number"
                    },
                    "pastDueInvoices": {
                      "type": "number"
                    },
                    "refundsPending": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/billing/plans": {
      "get": {
        "summary": "Gets a list of billing plans",
        "tags": [
          "Plans"
        ],
        "operationId": "adminListBillingPlans",
        "parameters": [
          {
            "name": "pageNum",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "types",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "billing plans found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plan"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plan"
                  }
                }
              }
            }
          },
          "403": {
            "description": "User unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "User unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/admin/billing/plans/discounts": {
      "get": {
        "summary": "Gets a list of billing plan discounts",
        "tags": [
          "Discounts"
        ],
        "operationId": "adminListBillingPlanDiscounts",
        "parameters": [
          {
            "name": "pageNum",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriptionOnly",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "types",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "billing plan discounts found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Discount"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Discount"
                  }
                }
              }
            }
          },
          "403": {
            "description": "User unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "User unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/admin/billing/receipts/{id}": {
      "get": {
        "summary": "Get a receipt for an invoice",
        "tags": [
          "Receipts"
        ],
        "operationId": "adminGetReceipt",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Receipt found",
            "content": {
            }
          },
          "302": {
            "description": "User not authenticated",
            "content": {
            }
          },
          "404": {
            "description": "Transaction not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "User unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/admin/billing/subscriptions": {
      "get": {
        "summary": "Lists subscription",
        "tags": [
          "Subscriptions"
        ],
        "operationId": "adminListSubscriptions",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "planId",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "required": false
          },
          {
            "name": "subscriptionStatus",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "required": false
          },
          {
            "name": "customerId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "subscription found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Subscription"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Subscription"
                  }
                }
              }
            }
          },
          "401": {
            "description": "User not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "User not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/admin/billing/subscriptions/{id}": {
      "delete": {
        "summary": "Cancels a subscription",
        "tags": [
          "Subscriptions"
        ],
        "operationId": "adminCancelSubscription",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "refund requested",
            "content": {
            }
          },
          "401": {
            "description": "User not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "User not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/admin/billing/transactions": {
      "get": {
        "summary": "Gets a list of transactions",
        "tags": [
          "Transactions"
        ],
        "operationId": "adminListTransaction",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "refund",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "transactionStatus",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "required": false
          },
          {
            "name": "customerId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "transactions found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transaction"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transaction"
                  }
                }
              }
            }
          },
          "401": {
            "description": "User not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "User not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/admin/billing/transactions/{id}": {
      "get": {
        "summary": "Gets a transaction",
        "tags": [
          "Transactions"
        ],
        "operationId": "adminGetTransaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "transaction found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          },
          "401": {
            "description": "User not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "User not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Request refund for a transaction",
        "tags": [
          "Transactions"
        ],
        "operationId": "adminDeleteTransaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "refund requested",
            "content": {
            }
          },
          "403": {
            "description": "User not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "User not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/admin/cards/new": {
      "get": {
        "summary": "Initiate new card creation",
        "tags": [
          "Cards"
        ],
        "operationId": "adminGetNewCard",
        "responses": {
          "200": {
            "description": "Card intilized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RejectionCard"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/RejectionCard"
                }
              }
            }
          },
          "403": {
            "description": "User unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "User unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/admin/cards": {
      "get": {
        "summary": "Gets a list of members cards",
        "tags": [
          "Cards"
        ],
        "operationId": "adminListCards",
        "parameters": [
          {
            "name": "memberId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "cards found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Card"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Card"
                  }
                }
              }
            }
          },
          "403": {
            "description": "User unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "User unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "member not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Creates an access card",
        "tags": [
          "Cards"
        ],
        "operationId": "adminCreateCard",
        "parameters": [

        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "createAccessCardDetails",
                "name": "createAccessCardDetails",
                "type": "object",
                "properties": {
                  "memberId": {
                    "type": "string"
                  },
                  "uid": {
                    "type": "string"
                  }
                },
                "required": [
                  "memberId",
                  "uid"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "access card created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Card"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Card"
                }
              }
            }
          },
          "403": {
            "description": "User unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "User unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "missing parameter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "member not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/admin/cards/{id}": {
      "put": {
        "summary": "Updates a card",
        "tags": [
          "Cards"
        ],
        "operationId": "adminUpdateCard",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "updateAccessCardDetails",
                "type": "object",
                "properties": {
                  "cardLocation": {
                    "type": "string"
                  }
                },
                "required": [
                  "cardLocation"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "card updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Card"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Card"
                }
              }
            }
          },
          "403": {
            "description": "User unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "User unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Invoice not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/admin/earned_memberships/{id}/reports": {
      "get": {
        "summary": "Gets a list of reports",
        "tags": [
          "Reports"
        ],
        "operationId": "adminListEarnedMembershipReports",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNum",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "reports found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Report"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Report"
                  }
                }
              }
            }
          },
          "403": {
            "description": "User unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "User unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Earned membership not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/admin/earned_memberships": {
      "get": {
        "summary": "Gets a list of earned memberships",
        "tags": [
          "EarnedMemberships"
        ],
        "operationId": "adminListEarnedMemberships",
        "parameters": [
          {
            "name": "pageNum",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "earned memberships found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EarnedMembership"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EarnedMembership"
                  }
                }
              }
            }
          },
          "403": {
            "description": "User unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "User unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Creates an earned membership",
        "tags": [
          "EarnedMemberships"
        ],
        "operationId": "adminCreateEarnedMembership",
        "parameters": [

        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "createEarnedMembershipDetails",
                "$ref": "#/components/schemas/NewEarnedMembership"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "earned membership created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EarnedMembership"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/EarnedMembership"
                }
              }
            }
          },
          "403": {
            "description": "User unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "User unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/admin/earned_memberships/{id}": {
      "get": {
        "summary": "Gets an earned membership",
        "operationId": "adminGetEarnedMembership",
        "tags": [
          "EarnedMemberships"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "earned membership found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EarnedMembership"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/EarnedMembership"
                }
              }
            }
          },
          "403": {
            "description": "User unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "User unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "EarnedMembership not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Updates an earned membership",
        "tags": [
          "EarnedMemberships"
        ],
        "operationId": "adminUpdateEarnedMembership",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "updateEarnedMembershipDetails",
                "$ref": "#/components/schemas/EarnedMembership"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "earned membership updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EarnedMembership"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/EarnedMembership"
                }
              }
            }
          },
          "403": {
            "description": "User unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "User unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "EarnedMembership not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/admin/invoice_options": {
      "post": {
        "summary": "Creates an invoice option",
        "tags": [
          "InvoiceOptions"
        ],
        "operationId": "adminCreateInvoiceOption",
        "parameters": [

        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "createInvoiceOptionDetails",
                "$ref": "#/components/schemas/NewInvoiceOption"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "invoice option created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceOption"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceOption"
                }
              }
            }
          },
          "403": {
            "description": "User unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "User unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/admin/invoice_options/{id}": {
      "put": {
        "summary": "Updates an invoice option",
        "tags": [
          "InvoiceOptions"
        ],
        "operationId": "adminUpdateInvoiceOption",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "updateInvoiceOptionDetails",
                "$ref": "#/components/schemas/InvoiceOption"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "invoice option updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceOption"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceOption"
                }
              }
            }
          },
          "403": {
            "description": "User unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "User unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Invoice option not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deletes an invoice option",
        "tags": [
          "InvoiceOptions"
        ],
        "operationId": "adminDeleteInvoiceOption",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "invoice option deleted",
            "content": {
            }
          },
          "403": {
            "description": "User unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "User unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Invoice Option not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/admin/invoices": {
      "get": {
        "summary": "Gets a list of invoices",
        "tags": [
          "Invoices"
        ],
        "operationId": "adminListInvoices",
        "parameters": [
          {
            "name": "pageNum",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "settled",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "pastDue",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "refunded",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "refundRequested",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "planId",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "required": false
          },
          {
            "name": "resourceId",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "required": false
          },
          {
            "name": "memberId",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "required": false
          },
          {
            "name": "resourceClass",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "invoices found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Invoice"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Invoice"
                  }
                }
              }
            }
          },
          "403": {
            "description": "User unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "User unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Creates an invoice",
        "tags": [
          "Invoices"
        ],
        "operationId": "adminCreateInvoices",
        "parameters": [

        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "createInvoiceDetails",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "memberId": {
                    "type": "string"
                  },
                  "resourceId": {
                    "type": "string"
                  },
                  "discountId": {
                    "type": "string",
                    "x-nullable": true
                  }
                },
                "required": [
                  "id",
                  "memberId",
                  "resourceId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "invoice created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "403": {
            "description": "User unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "User unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "missing parameter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "invoice option not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/admin/invoices/{id}": {
      "put": {
        "summary": "Updates an invoice",
        "tags": [
          "Invoices"
        ],
        "operationId": "adminUpdateInvoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "updateInvoiceDetails",
                "type": "object",
                "properties": {
                  "settled": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "invoice updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "403": {
            "description": "User unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "User unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Invoice not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deletes an invoice",
        "tags": [
          "Invoices"
        ],
        "operationId": "adminDeleteInvoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "invoice deleted",
            "content": {
            }
          },
          "403": {
            "description": "User unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "User unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Invoice not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/admin/members": {
      "post": {
        "summary": "Creates a member",
        "tags": [
          "Members"
        ],
        "operationId": "adminCreateMember",
        "parameters": [

        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "createMemberDetails",
                "$ref": "#/components/schemas/NewMember"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "member created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "403": {
            "description": "User unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "User unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/admin/members/{id}": {
      "put": {
        "summary": "Updates a member",
        "tags": [
          "Members"
        ],
        "operationId": "adminUpdateMember",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "updateMemberDetails",
                "type": "object",
                "properties": {
                  "firstname": {
                    "type": "string",
                    "x-nullable": true
                  },
                  "lastname": {
                    "type": "string",
                    "x-nullable": true
                  },
                  "email": {
                    "type": "string",
                    "x-nullable": true
                  },
                  "address": {
                    "type": "object",
                    "x-nullable": true,
                    "properties": {
                      "street": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "unit": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "city": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "state": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "postalCode": {
                        "type": "string",
                        "x-nullable": true
                      }
                    }
                  },
                  "phone": {
                    "type": "string",
                    "x-nullable": true
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "activeMember",
                      "inactive",
                      "nonMember",
                      "revoked"
                    ],
                    "x-nullable": true
                  },
                  "role": {
                    "type": "string",
                    "enum": [
                      "admin",
                      "member"
                    ],
                    "x-nullable": true
                  },
                  "renew": {
                    "type": "number",
                    "x-nullable": true
                  },
                  "memberContractOnFile": {
                    "type": "boolean",
                    "x-nullable": true
                  },
                  "subscription": {
                    "type": "boolean",
                    "x-nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "member updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "403": {
            "description": "User unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "User unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Member not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/admin/rentals": {
      "get": {
        "summary": "Gets a list of rentals",
        "tags": [
          "Rentals"
        ],
        "operationId": "adminListRentals",
        "parameters": [
          {
            "name": "pageNum",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "memberId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "rentals found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rental"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rental"
                  }
                }
              }
            }
          },
          "403": {
            "description": "User unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "User unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Creates a rental",
        "tags": [
          "Rentals"
        ],
        "operationId": "adminCreateRental",
        "parameters": [

        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "createRentalDetails",
                "$ref": "#/components/schemas/NewRental"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "rental created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rental"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Rental"
                }
              }
            }
          },
          "403": {
            "description": "User unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "User unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/admin/rentals/{id}": {
      "put": {
        "summary": "Updates a rental",
        "tags": [
          "Rentals"
        ],
        "operationId": "adminUpdateRental",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "updateRentalDetails",
                "$ref": "#/components/schemas/Rental"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "rental updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rental"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Rental"
                }
              }
            }
          },
          "403": {
            "description": "User unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "User unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Rental not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deletes a rental",
        "tags": [
          "Rentals"
        ],
        "operationId": "adminDeleteRental",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "rental deleted",
            "content": {
            }
          },
          "403": {
            "description": "User unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "User unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Rental not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/billing/payment_methods/new": {
      "get": {
        "summary": "Initiate new payment method creation",
        "tags": [
          "PaymentMethods"
        ],
        "operationId": "getNewPaymentMethod",
        "responses": {
          "200": {
            "description": "Token created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "clientToken": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "clientToken"
                  ]
                }
              },
              "text/html": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "clientToken": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "clientToken"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "User not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/billing/payment_methods": {
      "get": {
        "summary": "Gets a list of payment_methods",
        "tags": [
          "PaymentMethods"
        ],
        "operationId": "listPaymentMethods",
        "responses": {
          "200": {
            "description": "payment_methods found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/CreditCard"
                      },
                      {
                        "$ref": "#/components/schemas/PayPalAccount"
                      }
                    ]
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/CreditCard"
                      },
                      {
                        "$ref": "#/components/schemas/PayPalAccount"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "User not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create an payment_method",
        "tags": [
          "PaymentMethods"
        ],
        "operationId": "createPaymentMethod",
        "parameters": [

        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "createPaymentMethodDetails",
                "type": "object",
                "properties": {
                  "paymentMethodNonce": {
                    "type": "string"
                  },
                  "makeDefault": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "paymentMethodNonce"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "payment_method created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditCard"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/CreditCard"
                }
              }
            }
          },
          "401": {
            "description": "User not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "parameter missing",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/billing/payment_methods/{id}": {
      "get": {
        "summary": "Get a payment method",
        "tags": [
          "PaymentMethods"
        ],
        "operationId": "getPaymentMethod",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payment method deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditCard"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/CreditCard"
                }
              }
            }
          },
          "401": {
            "description": "User not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "User not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deletes a payment method",
        "tags": [
          "PaymentMethods"
        ],
        "operationId": "deletePaymentMethod",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Payment method deleted",
            "content": {
            }
          },
          "401": {
            "description": "User not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "User not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/billing/receipts/{id}": {
      "get": {
        "summary": "Get a receipt for an invoice",
        "tags": [
          "Receipts"
        ],
        "operationId": "getReceipt",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Receipt found",
            "content": {
            }
          },
          "302": {
            "description": "User not authenticated",
            "content": {
            }
          },
          "403": {
            "description": "User not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Transaction not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/billing/subscriptions/{id}": {
      "get": {
        "summary": "Gets a subscription",
        "tags": [
          "Subscriptions"
        ],
        "operationId": "getSubscription",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "subscription found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "401": {
            "description": "User not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "User not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Subscription not for user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a subscription",
        "tags": [
          "Subscriptions"
        ],
        "operationId": "updateSubscription",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "updateSubscriptionDetails",
                "type": "object",
                "properties": {
                  "paymentMethodToken": {
                    "type": "string"
                  }
                },
                "required": [
                  "paymentMethodToken"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "subscription updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "401": {
            "description": "User not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "User not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Subscription not for user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Cancels a subscription",
        "tags": [
          "Subscriptions"
        ],
        "operationId": "cancelSubscription",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "refund requested",
            "content": {
            }
          },
          "401": {
            "description": "User not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "User not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Subscription not for user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/billing/transactions": {
      "get": {
        "summary": "Gets a list of transactions",
        "tags": [
          "Transactions"
        ],
        "operationId": "listTransactions",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "refund",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "transactionStatus",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "required": false
          },
          {
            "name": "paymentMethodToken",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "transactions found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transaction"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transaction"
                  }
                }
              }
            }
          },
          "401": {
            "description": "User not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "User not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create an transaction",
        "tags": [
          "Transactions"
        ],
        "operationId": "createTransaction",
        "parameters": [

        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "createTransactionDetails",
                "type": "object",
                "properties": {
                  "invoiceId": {
                    "type": "string",
                    "x-nullable": true
                  },
                  "invoiceOptionId": {
                    "type": "string",
                    "x-nullable": true
                  },
                  "discountId": {
                    "type": "string",
                    "x-nullable": true
                  },
                  "paymentMethodId": {
                    "type": "string"
                  }
                },
                "required": [
                  "paymentMethodId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "transaction created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          },
          "401": {
            "description": "User not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "User not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Wrong invoice option type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "invoice option not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/billing/transactions/{id}": {
      "delete": {
        "summary": "Request refund for a transaction",
        "tags": [
          "Transactions"
        ],
        "operationId": "deleteTransaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "refund requested",
            "content": {
            }
          },
          "403": {
            "description": "User not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "User not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "invoice not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/client_error_handler": {
      "post": {
        "summary": "Sends a slack message",
        "tags": [
          "ClientErrorHandler"
        ],
        "operationId": "message",
        "parameters": [

        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "messageDetails",
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string"
                  }
                },
                "required": [
                  "message"
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Message sent",
            "content": {
            }
          }
        }
      }
    },
    "/documents/{id}": {
      "get": {
        "summary": "Get a document",
        "tags": [
          "Documents"
        ],
        "operationId": "getDocument",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Document found",
            "content": {
            }
          },
          "302": {
            "description": "User not authenticated",
            "content": {
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/earned_memberships/{id}/reports": {
      "get": {
        "summary": "Gets a list of reports for current member",
        "tags": [
          "Reports"
        ],
        "operationId": "listEarnedMembershipReports",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNum",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "reports found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Report"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Report"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden not an earned member",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create an report",
        "tags": [
          "Reports"
        ],
        "operationId": "createEarnedMembershipReport",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "createEarnedMembershipReportDetails",
                "$ref": "#/components/schemas/NewReport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "report created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Report"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Report"
                }
              }
            }
          },
          "403": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/earned_memberships/{id}": {
      "get": {
        "summary": "Gets an earned membership",
        "tags": [
          "EarnedMemberships"
        ],
        "operationId": "getEarnedMembership",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "earned membership found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EarnedMembership"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/EarnedMembership"
                }
              }
            }
          },
          "404": {
            "description": "earned membership not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access to different membership",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/invoice_options": {
      "get": {
        "summary": "Gets a list of invoice_options",
        "tags": [
          "InvoiceOptions"
        ],
        "operationId": "listInvoiceOptions",
        "parameters": [
          {
            "name": "pageNum",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriptionOnly",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "types",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "invoice_options found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceOption"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceOption"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoice_options/{id}": {
      "get": {
        "summary": "Gets an Invoice Option",
        "tags": [
          "InvoiceOptions"
        ],
        "operationId": "getInvoiceOption",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "invoice option found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceOption"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceOption"
                }
              }
            }
          },
          "404": {
            "description": "invoice option not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/invoices": {
      "get": {
        "summary": "Gets a list of invoices",
        "tags": [
          "Invoices"
        ],
        "operationId": "listInvoices",
        "parameters": [
          {
            "name": "pageNum",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "settled",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "pastDue",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "refunded",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "refundRequested",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "planId",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "required": false
          },
          {
            "name": "resourceId",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "required": false
          },
          {
            "name": "resourceClass",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "invoices found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Invoice"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Invoice"
                  }
                }
              }
            }
          },
          "401": {
            "description": "User not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create an invoice",
        "tags": [
          "Invoices"
        ],
        "operationId": "createInvoice",
        "parameters": [

        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "createInvoiceDetails",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "discountId": {
                    "type": "string",
                    "x-nullable": true
                  }
                },
                "required": [
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "invoice created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "401": {
            "description": "User not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "parameter missing",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "invoice option not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/members/{id}/permissions": {
      "get": {
        "summary": "Gets a member's permissions",
        "tags": [
          "Permissions"
        ],
        "operationId": "listMembersPermissions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Permissions found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/html": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Member not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Member not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "User not authenciated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/members": {
      "get": {
        "summary": "Gets a list of members",
        "tags": [
          "Members"
        ],
        "operationId": "listMembers",
        "parameters": [
          {
            "name": "pageNum",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currentMembers",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Members found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MemberSummary"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MemberSummary"
                  }
                }
              }
            }
          },
          "401": {
            "description": "User not authenciated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Registers new member",
        "tags": [
          "Authentication"
        ],
        "operationId": "registerMember",
        "parameters": [

        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "registerMemberDetails",
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "firstname": {
                    "type": "string"
                  },
                  "lastname": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string",
                    "x-nullable": true
                  },
                  "address": {
                    "type": "object",
                    "properties": {
                      "street": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "unit": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "city": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "state": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "postalCode": {
                        "type": "string",
                        "x-nullable": true
                      }
                    }
                  }
                },
                "required": [
                  "email",
                  "password",
                  "firstname",
                  "lastname"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Member registered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "422": {
            "description": "Email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/members/{id}": {
      "get": {
        "summary": "Gets a member",
        "tags": [
          "Members"
        ],
        "operationId": "getMember",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Member found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "404": {
            "description": "Member not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "User not authenciated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Updates a member and uploads signature",
        "tags": [
          "Members"
        ],
        "operationId": "updateMember",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "updateMemberDetails",
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "firstname": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "lastname": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "email": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "phone": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "address": {
                        "type": "object",
                        "x-nullable": true,
                        "properties": {
                          "street": {
                            "type": "string",
                            "x-nullable": true
                          },
                          "unit": {
                            "type": "string",
                            "x-nullable": true
                          },
                          "city": {
                            "type": "string",
                            "x-nullable": true
                          },
                          "state": {
                            "type": "string",
                            "x-nullable": true
                          },
                          "postalCode": {
                            "type": "string",
                            "x-nullable": true
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "signature": {
                        "type": "string",
                        "x-nullable": true
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Signature upload",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden updating different member",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "User not authenciated or authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "member not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/members/sign_in": {
      "post": {
        "summary": "Signs in user",
        "tags": [
          "Authentication"
        ],
        "operationId": "signIn",
        "parameters": [

        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "signInDetails",
                "type": "object",
                "properties": {
                  "member": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User signed in",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "401": {
            "description": "User unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/members/sign_out": {
      "delete": {
        "summary": "Signs out user",
        "tags": [
          "Authentication"
        ],
        "operationId": "signOut",
        "responses": {
          "204": {
            "description": "User signed out",
            "content": {
            }
          }
        }
      }
    },
    "/members/password": {
      "post": {
        "summary": "Sends password reset instructions",
        "tags": [
          "Password"
        ],
        "operationId": "requestPasswordReset",
        "parameters": [

        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "passwordResetDetails",
                "type": "object",
                "properties": {
                  "member": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Instructions sent",
            "content": {
            }
          },
          "422": {
            "description": "Email not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/passwordError"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/passwordError"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Updates member password",
        "tags": [
          "Password"
        ],
        "operationId": "resetPassword",
        "parameters": [

        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "passwordResetDetails",
                "type": "object",
                "properties": {
                  "member": {
                    "type": "object",
                    "properties": {
                      "resetPasswordToken": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Password reset",
            "content": {
            }
          },
          "422": {
            "description": "Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/passwordError"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/passwordError"
                }
              }
            }
          }
        }
      }
    },
    "/send_registration": {
      "post": {
        "summary": "Sends registration email",
        "tags": [
          "Authentication"
        ],
        "operationId": "sendRegistrationEmail",
        "parameters": [

        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "registrationEmailDetails",
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Registration email sent",
            "content": {
            }
          },
          "409": {
            "description": "Email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/rentals": {
      "get": {
        "summary": "Gets a list of rentals",
        "tags": [
          "Rentals"
        ],
        "operationId": "listRentals",
        "parameters": [
          {
            "name": "pageNum",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "rentals found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rental"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rental"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rentals/{id}": {
      "get": {
        "summary": "Gets a rental",
        "tags": [
          "Rentals"
        ],
        "operationId": "getRental",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "rental found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rental"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Rental"
                }
              }
            }
          },
          "404": {
            "description": "rental not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "User not authenciated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Updates a rental and uploads signature",
        "tags": [
          "Rentals"
        ],
        "operationId": "updateRental",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "updateRentalDetails",
                "type": "object",
                "properties": {
                  "signature": {
                    "type": "string",
                    "x-nullable": true
                  }
                },
                "required": [
                  "signature"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "rental updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rental"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Rental"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden updating different member's rental",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "User not authenciated or authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Rental not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    }
  }
}